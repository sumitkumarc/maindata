// Generated by view binder compiler. Do not edit!
package ontime.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ontime.app.R;

public final class RowCardDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final ImageView ivDelete;

  @NonNull
  public final LinearLayout llDelete;

  @NonNull
  public final TextView txtCarddate;

  @NonNull
  public final TextView txtCardname;

  @NonNull
  public final TextView txtCardno;

  private RowCardDetailsBinding(@NonNull LinearLayout rootView, @NonNull ImageView ivDelete,
      @NonNull LinearLayout llDelete, @NonNull TextView txtCarddate, @NonNull TextView txtCardname,
      @NonNull TextView txtCardno) {
    this.rootView = rootView;
    this.ivDelete = ivDelete;
    this.llDelete = llDelete;
    this.txtCarddate = txtCarddate;
    this.txtCardname = txtCardname;
    this.txtCardno = txtCardno;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RowCardDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RowCardDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.row_card_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RowCardDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_delete;
      ImageView ivDelete = rootView.findViewById(id);
      if (ivDelete == null) {
        break missingId;
      }

      id = R.id.ll_delete;
      LinearLayout llDelete = rootView.findViewById(id);
      if (llDelete == null) {
        break missingId;
      }

      id = R.id.txt_carddate;
      TextView txtCarddate = rootView.findViewById(id);
      if (txtCarddate == null) {
        break missingId;
      }

      id = R.id.txt_cardname;
      TextView txtCardname = rootView.findViewById(id);
      if (txtCardname == null) {
        break missingId;
      }

      id = R.id.txt_cardno;
      TextView txtCardno = rootView.findViewById(id);
      if (txtCardno == null) {
        break missingId;
      }

      return new RowCardDetailsBinding((LinearLayout) rootView, ivDelete, llDelete, txtCarddate,
          txtCardname, txtCardno);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
