// Generated by view binder compiler. Do not edit!
package ontime.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatButton;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ontime.app.R;

public final class RRowNeworderItemBinding implements ViewBinding {
  @NonNull
  private final FrameLayout rootView;

  @NonNull
  public final AppCompatButton btCancelled;

  @NonNull
  public final AppCompatButton btConfirm;

  @NonNull
  public final ImageView ivRestImg;

  @NonNull
  public final ImageView ivUserImage;

  @NonNull
  public final TextView txtExtraSauce;

  @NonNull
  public final TextView txtOrderDate;

  @NonNull
  public final TextView txtOrderDeliverType;

  @NonNull
  public final TextView txtOrderId;

  @NonNull
  public final TextView txtOrderPamnetType;

  @NonNull
  public final TextView txtOrderStatus;

  @NonNull
  public final TextView txtOrderTime;

  @NonNull
  public final TextView txtRestName;

  @NonNull
  public final TextView txtRestQty;

  @NonNull
  public final TextView txtTotal;

  @NonNull
  public final TextView txtUserName;

  private RRowNeworderItemBinding(@NonNull FrameLayout rootView,
      @NonNull AppCompatButton btCancelled, @NonNull AppCompatButton btConfirm,
      @NonNull ImageView ivRestImg, @NonNull ImageView ivUserImage, @NonNull TextView txtExtraSauce,
      @NonNull TextView txtOrderDate, @NonNull TextView txtOrderDeliverType,
      @NonNull TextView txtOrderId, @NonNull TextView txtOrderPamnetType,
      @NonNull TextView txtOrderStatus, @NonNull TextView txtOrderTime,
      @NonNull TextView txtRestName, @NonNull TextView txtRestQty, @NonNull TextView txtTotal,
      @NonNull TextView txtUserName) {
    this.rootView = rootView;
    this.btCancelled = btCancelled;
    this.btConfirm = btConfirm;
    this.ivRestImg = ivRestImg;
    this.ivUserImage = ivUserImage;
    this.txtExtraSauce = txtExtraSauce;
    this.txtOrderDate = txtOrderDate;
    this.txtOrderDeliverType = txtOrderDeliverType;
    this.txtOrderId = txtOrderId;
    this.txtOrderPamnetType = txtOrderPamnetType;
    this.txtOrderStatus = txtOrderStatus;
    this.txtOrderTime = txtOrderTime;
    this.txtRestName = txtRestName;
    this.txtRestQty = txtRestQty;
    this.txtTotal = txtTotal;
    this.txtUserName = txtUserName;
  }

  @Override
  @NonNull
  public FrameLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RRowNeworderItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RRowNeworderItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.r_row_neworder_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RRowNeworderItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bt_cancelled;
      AppCompatButton btCancelled = rootView.findViewById(id);
      if (btCancelled == null) {
        break missingId;
      }

      id = R.id.bt_confirm;
      AppCompatButton btConfirm = rootView.findViewById(id);
      if (btConfirm == null) {
        break missingId;
      }

      id = R.id.iv_rest_img;
      ImageView ivRestImg = rootView.findViewById(id);
      if (ivRestImg == null) {
        break missingId;
      }

      id = R.id.iv_user_image;
      ImageView ivUserImage = rootView.findViewById(id);
      if (ivUserImage == null) {
        break missingId;
      }

      id = R.id.txt_extra_sauce;
      TextView txtExtraSauce = rootView.findViewById(id);
      if (txtExtraSauce == null) {
        break missingId;
      }

      id = R.id.txt_order_date;
      TextView txtOrderDate = rootView.findViewById(id);
      if (txtOrderDate == null) {
        break missingId;
      }

      id = R.id.txt_order_deliver_type;
      TextView txtOrderDeliverType = rootView.findViewById(id);
      if (txtOrderDeliverType == null) {
        break missingId;
      }

      id = R.id.txt_order_id;
      TextView txtOrderId = rootView.findViewById(id);
      if (txtOrderId == null) {
        break missingId;
      }

      id = R.id.txt_order_pamnet_type;
      TextView txtOrderPamnetType = rootView.findViewById(id);
      if (txtOrderPamnetType == null) {
        break missingId;
      }

      id = R.id.txt_order_status;
      TextView txtOrderStatus = rootView.findViewById(id);
      if (txtOrderStatus == null) {
        break missingId;
      }

      id = R.id.txt_order_time;
      TextView txtOrderTime = rootView.findViewById(id);
      if (txtOrderTime == null) {
        break missingId;
      }

      id = R.id.txt_rest_name;
      TextView txtRestName = rootView.findViewById(id);
      if (txtRestName == null) {
        break missingId;
      }

      id = R.id.txt_rest_qty;
      TextView txtRestQty = rootView.findViewById(id);
      if (txtRestQty == null) {
        break missingId;
      }

      id = R.id.txt_total;
      TextView txtTotal = rootView.findViewById(id);
      if (txtTotal == null) {
        break missingId;
      }

      id = R.id.txt_user_name;
      TextView txtUserName = rootView.findViewById(id);
      if (txtUserName == null) {
        break missingId;
      }

      return new RRowNeworderItemBinding((FrameLayout) rootView, btCancelled, btConfirm, ivRestImg,
          ivUserImage, txtExtraSauce, txtOrderDate, txtOrderDeliverType, txtOrderId,
          txtOrderPamnetType, txtOrderStatus, txtOrderTime, txtRestName, txtRestQty, txtTotal,
          txtUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
