// Generated by view binder compiler. Do not edit!
package ontime.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.FrameLayout;
import android.widget.ImageView;
import android.widget.LinearLayout;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ontime.app.R;

public final class RRowItemDetailsBinding implements ViewBinding {
  @NonNull
  private final LinearLayout rootView;

  @NonNull
  public final LinearLayout fist;

  @NonNull
  public final FrameLayout flQty;

  @NonNull
  public final ImageView ivAdd;

  @NonNull
  public final ImageView ivRestProfileImg;

  @NonNull
  public final ImageView ivSub;

  @NonNull
  public final LinearLayout llDeleteItem;

  @NonNull
  public final LinearLayout llEdit;

  @NonNull
  public final LinearLayout second;

  @NonNull
  public final TextView txtAddress;

  @NonNull
  public final TextView txtName;

  @NonNull
  public final TextView txtPrice;

  @NonNull
  public final TextView txtQty;

  private RRowItemDetailsBinding(@NonNull LinearLayout rootView, @NonNull LinearLayout fist,
      @NonNull FrameLayout flQty, @NonNull ImageView ivAdd, @NonNull ImageView ivRestProfileImg,
      @NonNull ImageView ivSub, @NonNull LinearLayout llDeleteItem, @NonNull LinearLayout llEdit,
      @NonNull LinearLayout second, @NonNull TextView txtAddress, @NonNull TextView txtName,
      @NonNull TextView txtPrice, @NonNull TextView txtQty) {
    this.rootView = rootView;
    this.fist = fist;
    this.flQty = flQty;
    this.ivAdd = ivAdd;
    this.ivRestProfileImg = ivRestProfileImg;
    this.ivSub = ivSub;
    this.llDeleteItem = llDeleteItem;
    this.llEdit = llEdit;
    this.second = second;
    this.txtAddress = txtAddress;
    this.txtName = txtName;
    this.txtPrice = txtPrice;
    this.txtQty = txtQty;
  }

  @Override
  @NonNull
  public LinearLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RRowItemDetailsBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RRowItemDetailsBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.r_row_item_details, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RRowItemDetailsBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.fist;
      LinearLayout fist = rootView.findViewById(id);
      if (fist == null) {
        break missingId;
      }

      id = R.id.fl_qty;
      FrameLayout flQty = rootView.findViewById(id);
      if (flQty == null) {
        break missingId;
      }

      id = R.id.iv_add;
      ImageView ivAdd = rootView.findViewById(id);
      if (ivAdd == null) {
        break missingId;
      }

      id = R.id.iv_rest_profile_img;
      ImageView ivRestProfileImg = rootView.findViewById(id);
      if (ivRestProfileImg == null) {
        break missingId;
      }

      id = R.id.iv_sub;
      ImageView ivSub = rootView.findViewById(id);
      if (ivSub == null) {
        break missingId;
      }

      id = R.id.ll_delete_item;
      LinearLayout llDeleteItem = rootView.findViewById(id);
      if (llDeleteItem == null) {
        break missingId;
      }

      id = R.id.ll_edit;
      LinearLayout llEdit = rootView.findViewById(id);
      if (llEdit == null) {
        break missingId;
      }

      id = R.id.second;
      LinearLayout second = rootView.findViewById(id);
      if (second == null) {
        break missingId;
      }

      id = R.id.txt_Address;
      TextView txtAddress = rootView.findViewById(id);
      if (txtAddress == null) {
        break missingId;
      }

      id = R.id.txt_Name;
      TextView txtName = rootView.findViewById(id);
      if (txtName == null) {
        break missingId;
      }

      id = R.id.txt_price;
      TextView txtPrice = rootView.findViewById(id);
      if (txtPrice == null) {
        break missingId;
      }

      id = R.id.txt_qty;
      TextView txtQty = rootView.findViewById(id);
      if (txtQty == null) {
        break missingId;
      }

      return new RRowItemDetailsBinding((LinearLayout) rootView, fist, flQty, ivAdd,
          ivRestProfileImg, ivSub, llDeleteItem, llEdit, second, txtAddress, txtName, txtPrice,
          txtQty);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
