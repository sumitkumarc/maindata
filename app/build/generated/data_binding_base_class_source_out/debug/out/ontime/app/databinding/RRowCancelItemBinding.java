// Generated by view binder compiler. Do not edit!
package ontime.app.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;
import ontime.app.R;

public final class RRowCancelItemBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView ivRestImg;

  @NonNull
  public final ImageView ivUserImg;

  @NonNull
  public final TextView txtDtype;

  @NonNull
  public final TextView txtOrderStatus;

  @NonNull
  public final TextView txtPtype;

  @NonNull
  public final TextView txtRestName;

  @NonNull
  public final TextView txtRestQty;

  @NonNull
  public final TextView txtUserName;

  private RRowCancelItemBinding(@NonNull ConstraintLayout rootView, @NonNull ImageView ivRestImg,
      @NonNull ImageView ivUserImg, @NonNull TextView txtDtype, @NonNull TextView txtOrderStatus,
      @NonNull TextView txtPtype, @NonNull TextView txtRestName, @NonNull TextView txtRestQty,
      @NonNull TextView txtUserName) {
    this.rootView = rootView;
    this.ivRestImg = ivRestImg;
    this.ivUserImg = ivUserImg;
    this.txtDtype = txtDtype;
    this.txtOrderStatus = txtOrderStatus;
    this.txtPtype = txtPtype;
    this.txtRestName = txtRestName;
    this.txtRestQty = txtRestQty;
    this.txtUserName = txtUserName;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static RRowCancelItemBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static RRowCancelItemBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.r_row_cancel_item, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static RRowCancelItemBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.iv_rest_img;
      ImageView ivRestImg = rootView.findViewById(id);
      if (ivRestImg == null) {
        break missingId;
      }

      id = R.id.iv_user_img;
      ImageView ivUserImg = rootView.findViewById(id);
      if (ivUserImg == null) {
        break missingId;
      }

      id = R.id.txt_Dtype;
      TextView txtDtype = rootView.findViewById(id);
      if (txtDtype == null) {
        break missingId;
      }

      id = R.id.txt_order_status;
      TextView txtOrderStatus = rootView.findViewById(id);
      if (txtOrderStatus == null) {
        break missingId;
      }

      id = R.id.txt_ptype;
      TextView txtPtype = rootView.findViewById(id);
      if (txtPtype == null) {
        break missingId;
      }

      id = R.id.txtRestName;
      TextView txtRestName = rootView.findViewById(id);
      if (txtRestName == null) {
        break missingId;
      }

      id = R.id.txtRestQty;
      TextView txtRestQty = rootView.findViewById(id);
      if (txtRestQty == null) {
        break missingId;
      }

      id = R.id.txt_user_name;
      TextView txtUserName = rootView.findViewById(id);
      if (txtUserName == null) {
        break missingId;
      }

      return new RRowCancelItemBinding((ConstraintLayout) rootView, ivRestImg, ivUserImg, txtDtype,
          txtOrderStatus, txtPtype, txtRestName, txtRestQty, txtUserName);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
